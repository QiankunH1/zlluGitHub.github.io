(window.webpackJsonp=window.webpackJsonp||[]).push([[328],{661:function(t,s,a){"use strict";a.r(s);var e=a(0),_=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1、hash-路由模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、hash-路由模式"}},[t._v("#")]),t._v(" 1、hash 路由模式")]),t._v(" "),s("p",[t._v("即地址栏 "),s("code",[t._v("URL")]),t._v(" 中的 "),s("code",[t._v("#")]),t._v(" 符号（此 "),s("code",[t._v("hash")]),t._v(" 不是密码学里的散列运算）。比如这个 "),s("code",[t._v("URL：http://www.abc.com/#/home")]),t._v("，"),s("code",[t._v("hash")]),t._v(" 的值为 "),s("code",[t._v("#/home")]),t._v("。它的特点在于："),s("code",[t._v("hash")]),t._v(" 虽然出现在 "),s("code",[t._v("URL")]),t._v(" 中，但不会被包括在 "),s("code",[t._v("HTTP")]),t._v(" 请求中，对后端完全没有影响，因此改变 "),s("code",[t._v("hash")]),t._v(" 不会重新加载页面。")]),t._v(" "),s("h2",{attrs:{id:"_2、history-路由模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、history-路由模式"}},[t._v("#")]),t._v(" 2、history 路由模式")]),t._v(" "),s("p",[t._v("主要利用了 "),s("code",[t._v("HTML5 History Interface")]),t._v(" 中新增的 "),s("code",[t._v("pushState()")]),t._v(" 和 "),s("code",[t._v("replaceState()")]),t._v(" 方法。但值得注意的是，在访问二级页面的时候，做刷新操作，会出现 "),s("code",[t._v("404")]),t._v(" 错误，那么就需要和后端人配合让他配置一下 "),s("code",[t._v("apache")]),t._v(" 或是 "),s("code",[t._v("nginx")]),t._v(" 的 "),s("code",[t._v("url")]),t._v(" 重定向，重定向到你的首页路由上就 "),s("code",[t._v("ok")]),t._v(" 了。下面 以 "),s("code",[t._v("Node")]),t._v(" 后台为例：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解决vue 路由在 history刷新 404情况")]),t._v("\nrouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/index.html"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"在这里返回"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"_3、应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、应用场景"}},[t._v("#")]),t._v(" 3、应用场景")]),t._v(" "),s("p",[t._v("这两个方法应用于浏览器的历史记录栈，在当前已有的 "),s("code",[t._v("back")]),t._v("、"),s("code",[t._v("forward")]),t._v("、"),s("code",[t._v("go")]),t._v(" 的基础之上，它们提供了对历史记录进行修改的功能。只是当它们执行修改时，虽然改变了当前的 "),s("code",[t._v("URL")]),t._v("，但浏览器不会立即向后端发送请求。因此可以说，"),s("code",[t._v("hash")]),t._v(" 模式和 "),s("code",[t._v("history")]),t._v(" 模式都属于浏览器自身的特性，"),s("code",[t._v("Vue-Router")]),t._v(" 只是利用了这两个特性（通过调用浏览器提供的接口）来实现前端路由。")]),t._v(" "),s("p",[t._v("一般场景下，"),s("code",[t._v("hash")]),t._v(" 和 "),s("code",[t._v("history")]),t._v(" 是都可以的，除非你不想在 "),s("code",[t._v("url")]),t._v(" 中出现 "),s("code",[t._v("#")]),t._v(" 符号就可以使用路由的 "),s("code",[t._v("history")]),t._v(" 模式，这种模式充分利用 "),s("code",[t._v("history.pushState API")]),t._v(" 来完成URL 跳转而无须重新加载页面。")]),t._v(" "),s("h2",{attrs:{id:"_4、总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、总结"}},[t._v("#")]),t._v(" 4、总结")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1、在 "),s("code",[t._v("hash")]),t._v(" 模式下，仅 "),s("code",[t._v("hash")]),t._v(" 符号之前的内容会被包含在请求中，如 "),s("code",[t._v("http://www.abc.com")]),t._v("，因此对于后端来说，即使没有做到对路由的全覆盖，也不会返回 "),s("code",[t._v("404")]),t._v(" 错误。")])]),t._v(" "),s("li",[s("p",[t._v("2、在 "),s("code",[t._v("history")]),t._v(" 模式下，前端的 "),s("code",[t._v("URL")]),t._v(" 必须和实际向后端发起请求的 "),s("code",[t._v("URL")]),t._v(" 一致，如 "),s("code",[t._v("http://www.abc.com/article/id")]),t._v("。如果后端缺少对 "),s("code",[t._v("/article/id")]),t._v(" 的路由处理，将返回 "),s("code",[t._v("404")]),t._v(" 错误。"),s("code",[t._v("Vue-Router")]),t._v(" 官网里如此描述：“不过这种模式要玩好，还需要后台配置支持……所以呢，你要在服务端增加一个覆盖所有情况的候选资源：如果 "),s("code",[t._v("URL")]),t._v(" 匹配不到任何静态资源，则应该返回同一个 "),s("code",[t._v("index.html")]),t._v(" 页面，这个页面就是你 "),s("code",[t._v("app")]),t._v(" 依赖的页面。”")])])])])}),[],!1,null,null,null);s.default=_.exports}}]);